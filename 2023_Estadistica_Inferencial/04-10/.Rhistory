names(cartesinano) <- c("Id","Nivel_1",
"Nivel_2",
"Nivel_3",
"Nivel_4")
# Renombrar nombres de columnas
# Re-ordenar el data frame de menor a mayor por columnas
Cartesiano_fn <- cartesinano %>%
arrange(Nivel_1,Nivel_2,Nivel_3)
write_csv(Cartesiano_fn,"todas_las_combinaciones.csv")
# Criterio de desbloqueo para ser pagadas,
getwd()
View(Combinaciones_si_pagadas_por_tercera_condicion)
library(tidyverse)
Vector_de_meses <- c('ene',
'feb',
'mar',
'abr',
'may',
'jun',
'jul',
'ago',
'sep',
'oct',
'nov',
'dic')
Vector_de_duracion <- c(31,
28,
31,
30,
31,
30,
31,
31,
30,
31,
30,
31)
Vector_de_duracion
Vector_de_periodos <- c(2017:2022)
base_por_periodo <- function(archivo){
meses_juntos <- list()
for (i in 1:12) {
base_1 <- read_excel(archivo,
sheet = i,
range = "A15:ML46")
base_2 <- read_excel(archivo,
sheet = i,
range = "AO15:BL46")
base_3 <- read_excel(archivo,
sheet = i,
range = "BN15:BS46")
meses_juntos[[i]]<- cbind(base_1,base_2,base_3)
}
}
base_2 <- read_excel(archivo,
sheet = i,
range = "AO15:BL46")
library(tidyverse)
library(readxl)
base_por_periodo <- function(archivo){
meses_juntos <- list()
for (i in 1:12) {
base_1 <- read_excel(archivo,
sheet = i,
range = "A15:ML46")
base_2 <- read_excel(archivo,
sheet = i,
range = "AO15:BL46")
base_3 <- read_excel(archivo,
sheet = i,
range = "BN15:BS46")
nombres <- paste("mes_", i, "_.csv")
datos <- cbind(base_1,base_2,base_3)
write_csv(datos,nombres)
}
}
base_por_periodo("233255_OBS MET LORETO BCS 2017.xlsx")
# Imporntacion de datos
# Datos enero 2017
setwd("~/Dropbox/Ciencia_de_datos/748-22")
library(tidyverse)
library(readxl)
# Imporntacion de datos
# Datos enero 2017
setwd("~/Dropbox/Ciencia_de_datos/748-22")
base_por_periodo <- function(archivo){
meses_juntos <- list()
for (i in 1:12) {
base_1 <- read_excel(archivo,
sheet = i,
range = "A15:ML46")
base_2 <- read_excel(archivo,
sheet = i,
range = "AO15:BL46")
base_3 <- read_excel(archivo,
sheet = i,
range = "BN15:BS46")
nombres <- paste("mes_", i, "_.csv")
datos <- cbind(base_1,base_2,base_3)
write_csv(datos,nombres)
}
}
base_por_periodo("233255_OBS MET LORETO BCS 2017.xlsx")
getwd()
?dist
?density
density(datos)
datos <- rpois(10000,3)
hist(datos)
density(datos)
plot(densidad)
densidad <- density(datos)
plot(densidad)
datos <- rpois(10000,3)
hist(datos)
densidad <- density(datos)
plot(densidad)
datos <- rpois(100000,3)
hist(datos)
densidad <- density(datos)
plot(densidad)
x11()
hist(datos)
datos <- rpois(10,3)
hist(datos)
x11()
datos <- rpois(10,3)
hist(datos)
datos <- rpois(10,3)
hist(datos)
datos <- rpois(100,3)
hist(datos)
datos <- rpois(100,3)
hist(datos)
datos <- rpois(100,3)
hist(datos)
datos <- rpois(100,3)
hist(datos)
datos <- rpois(100,3)
hist(datos)
densidad <- density(datos)
plot(densidad)
datos <- rpois(100,3)
hist(datos)
densidad <- density(datos)
plot(densidad)
datos <- rpois(1000,3)
hist(datos)
densidad <- density(datos)
plot(densidad)
datos <- rpois(10000,3)
hist(datos)
densidad <- density(datos)
plot(densidad)
hist(datos)
datos <- rpois(10000,3)
hist(datos)
mean(datos)
getwd()
dbinom(3,2000,.001)
?pbinom
?dpois
1-pbinom(2,15,.5)
dbinom(0,15,.5)+dbinom(1,15,.5)
dbinom(0,15,.5)+dbinom(1,15,.5)+dbinom(2,15,.5)
1-dbinom(0,15,.5)-dbinom(1,15,.5)
1-pbinom(2,15,.5)
1-pbinom(3,15,.5)
1-pbinom(1,15,.5)
p <- no_lluvia+paragua-dia_chido
lluvia <- .3
paragaua <- .4
no_lluvia <- 1-lluvia
dia_chido <- no_lluvia*paragaua
p <- no_lluvia+paragua-dia_chido
p <- no_lluvia+paragaua-dia_chido
p
1-lluvia*(1-paragua)
1-lluvia*(1-paragaua)
.2*.3
x11()
curve(dgamma(x, shape=5, rate=4), from=0, to=6, las=1,
ylab='Densidad')
# Gamma, \alpha = 5
curve(dgamma(x, shape=5, rate=3), from=0, to=6, las=1,
ylab='Densidad')
curve(dgamma(x, shape=5, rate=4), from=0, to=6, las=1,
ylab='Densidad')
curve(dgamma(x, shape=5, rate=5), from=0, to=6, las=1,
ylab='Densidad')
# \beta = 3
curve(dgamma(x, shape=3, rate=3), from=0, to=6, las=1,
ylab='Densidad')
?dweibull
pbinom(2,.5,15)
pbinom(2,.5,15)
?binom
dbinom
?dbinom
pbinom(2,15,.5)
1-pbinom(2,15,.5)
dbinom(0,15,.5)+dbinom(1,15,.5)
1-dbinom(0,15,.5)-dbinom(1,15,.5)
distribuion <- function(n,p,k){
prob <- 0
for(i in 0:k){
prob <- prob + dbinom(i,n,p)
}
}
1- distribuion(15,.5,2 )
distribuion <- function(n,p,k){
prob <- 0
for(i in 0:k){
prob <- prob + dbinom(i,n,p)
}
return(prob)
}
1- distribuion(15,.5,2 )
distribuion <- function(n,p,k){
prob <- 0
for(i in 0:k){
print(prob)
prob <- prob + dbinom(i,n,p)
}
return(prob)
}
1- distribuion(15,.5,2 )
1-dbinom(1,25,1/20)
dpois(0,5)+dpois(1,5)+dpois(2,5)
1-dpois(0,5)+dpois(1,5)+dpois(2,5)
1-dpois(0,5)-dpois(1,5)-dpois(2,5)
dpois(0,5)+dpois(1,5)+dpois(2,5)
dpois(0,5)+dpois(1,5)+dpois(2,5)+dpois(3,5)
1-ppois(7,5)
1-sum(dpois(0:7,5))
1- sum(dbinom(0:8,50,.15))
sum(dbinom(0:8,50,.15))
1-sum(dbinom(0:4),50,.15)
1-sum(dbinom(0:4,50,.15))
dbinom(5,50,.15)
qnorm(.1131,5,4)
(1-10^2)
(1-10^(-2))
x <- rnorm(1000)
plot(x)
hist(x)
y <- dnorm(x)
plot(x,y)
hist(x, probability = TRUE)
plot(x,y)
y <- Pnorm(x)
y <- pnorm(x)
plot(x,y)
X <- rbinom(20,10000,.5)
setwd("D:/Dropbox/05_SAE/02_Inferencia/04-10")
write.csv(X, file = "datos.csv")
Y <- 3X^2+X+1
Y <- 3X+1
Y = 3X+1
Y = 3*X+1
Y = 3*X*X+X+1
write.csv(X, file = "datos_1.csv")
write.csv(Y, file = "datos_2.csv")
mtcars
data <- as.tibbie(mtcars)
data <- as.tibie(mtcars)
data <- as.data.frame(mtcars)
library(dplyr)
data <- as_tibble(mtcars)
data
View(fsys)
View(data)
summarise(data)
Summary (data)
Summary(data)
describe(data)
descrive(data)
summarise(data)
x <- rnorm(1000)
y <- dnorm(1000)
plot(x,y)
y <- dnorm(x)
plot(x,y)
hist(x, density = TRUE)
hist(x, density = TRUE)
hist(x, freq = FALSE)
datos_graficas <- function(cantidad){
x <- rnorm(10000)
y <- dnorm(x)
return(c(x,y))
}
datos_graficas(10000)
plot(datos_graficas(10000))
datos <- datos_graficas(10000)
plot(datos[1])
plot(datos[1,])
library(dplyr)
return(data)
datos_graficas <- function(cantidad){
library(dplyr)
x <- rnorm(10000)
y <- dnorm(x)
data <- tibble(x,y)
return(data)
}
datos <- datos_graficas(10000)
View(datos)
plot(datos[1,])
datos[1,]
datos[,1]
plot(datos[,1])
plot(datos)
datos_histograma <- datos[,1]
hist(datos_histograma, freq = FALSE)
datos_histograma <- datos[,1]
hist(datos_histograma, freq = FALSE)
typeof(datos_histograma)
datos_graficas <- function(cantidad){
library(dplyr)
x <- rnorm(10000)
y <- dnorm(x)
data <- data_frame(x,y)
return(data)
}
datos <- datos_graficas(10000)
plot(datos)
datos_histograma <- datos[,1]
typeof(datos_histograma)
hist(datos_histograma, freq = FALSE)
datos_histograma <- datos %>% select(x)
typeof(datos_histograma)
hist(datos_histograma, freq = FALSE)
library(ggplot2)
ggplot(data=datos)
grafica_1 <- function(){
# Librerias necesarias para que esta función se ejecute
# Para hacer las graficas
library(ggplot2)
#Para manejar mejor los data frames
library(dplyr)
# Generar numeros aleatorios
x <- rnorm(cantidad)
# Calcular la densidad del vector x
y <- dnorm(x)
datos <- data_frame(x,y)
imagen_1 <- ggplot(data = datos,aes(x=x,y=y))+ geom_line()
ggsave(imagen_1,device = "pdf")
}
grafica_1()
grafica_1 <- function(cantidad=10000){
# Librerias necesarias para que esta función se ejecute
# Para hacer las graficas
library(ggplot2)
#Para manejar mejor los data frames
library(dplyr)
# Generar numeros aleatorios
x <- rnorm(cantidad)
# Calcular la densidad del vector x
y <- dnorm(x)
datos <- data_frame(x,y)
imagen_1 <- ggplot(data = datos,aes(x=x,y=y))+ geom_line()
ggsave(imagen_1,device = "pdf")
}
grafica_1()
pdf("myplot.pdf")
myplot <- ggplot(mtcars, aes(wt, mpg)) + geom_point()
print(myplot)
dev.off()
dev.off()
pdf("grafica_1.pdf")
imagen_1 <- ggplot(data = datos,aes(x=x,y=y))+ geom_line()
print(myplot)
dev.off()
# Generar numeros aleatorios
x <- rnorm(cantidad)
# Generar numeros aleatorios
cantidad <- 10000
x <- rnorm(cantidad)
# Calcular la densidad del vector x
y <- dnorm(x)
datos <- data_frame(x,y)
pdf("grafica_1.pdf")
imagen_1 <- ggplot(data = datos,aes(x=x,y=y))+ geom_line()
print(myplot)
dev.off()
pdf("grafica_1.pdf")
grafica_1 <- ggplot(data = datos,aes(x=x,y=y))+ geom_line()
print(grafica_1)
dev.off()
pdf("grafica_2.pdf")
grafica_2 <- ggplot(data = datos,aes(x=x))+ geom_histogram()
print(grafica_2)
dev.off()
pdf("grafica_2.pdf")
grafica_2 <- ggplot(data = datos,aes(x=x))+ geom_histogram()+geom_density()
print(grafica_2)
dev.off()
grafica_2 <- ggplot(data = datos,aes(x=x))+ geom_histogram(aes(y = ..density..), color = 1, fill= "whithe")+geom_density()
grafica_2
grafica_2 <- ggplot(data = datos,aes(x=x))+ geom_histogram(aes(y = ..density..), color = 1, fill= "white")+geom_density()
grafica_2
grafica_1(10)
grafica_1 <- function(cantidad=10000){
# Librerias necesarias para que esta función se ejecute
# Para hacer las graficas
library(ggplot2)
#Para manejar mejor los data frames
library(dplyr)
# Generar numeros aleatorios
cantidad <- 10000
x <- rnorm(cantidad)
# Calcular la densidad del vector x
y <- dnorm(x)
datos <- data_frame(x,y)
pdf("grafica_1.pdf")
grafica_1 <- ggplot(data = datos,aes(x=x,y=y))+ geom_line()
print(grafica_1)
dev.off()
pdf("grafica_2.pdf")
grafica_2 <- ggplot(data = datos,aes(x=x))+ geom_histogram(aes(y = ..density..), color = 1, fill= "white")+geom_density()
grafica_2
print(grafica_2)
dev.off()
}
grafica_1(10)
grafica_1 <- function(cantidad=10000){
# Librerias necesarias para que esta función se ejecute
# Para hacer las graficas
library(ggplot2)
#Para manejar mejor los data frames
library(dplyr)
# Generar numeros aleatorios
x <- rnorm(cantidad)
# Calcular la densidad del vector x
y <- dnorm(x)
datos <- data_frame(x,y)
pdf("grafica_1.pdf")
grafica_1 <- ggplot(data = datos,aes(x=x,y=y))+ geom_line()
print(grafica_1)
dev.off()
pdf("grafica_2.pdf")
grafica_2 <- ggplot(data = datos,aes(x=x))+ geom_histogram(aes(y = ..density..), color = 1, fill= "white")+geom_density()
grafica_2
print(grafica_2)
dev.off()
}
grafica_1(10)
grafica_1 <- function(cantidad=10000){
# Librerias necesarias para que esta función se ejecute
# Para hacer las graficas
library(ggplot2)
#Para manejar mejor los data frames
library(dplyr)
# Generar numeros aleatorios
x <- rnorm(cantidad)
# Calcular la densidad del vector x
y <- dnorm(x)
datos <- data_frame(x,y)
pdf("grafica_1.pdf")
grafica_1 <- ggplot(data = datos,aes(x=x,y=y))+ geom_line()
grafica_1
print(grafica_1)
dev.off()
pdf("grafica_2.pdf")
grafica_2 <- ggplot(data = datos,aes(x=x)) +
geom_histogram(aes(y = ..density..), color = 1, fill= "white") +
geom_density()
grafica_2
print(grafica_2)
dev.off()
}
grafica_1(10)
?rbinom
X <- rbinom(20,10000,.5)
Y <- 3*X^2+X+1
X
plot(X)
y <- dbinom(x,1000,.5)
y <- dbinom(X,1000,.5)
plot(X,y)
X <- rbinom(20,10000,.5)
Y <- 3*X^2+X+1
plot(X,y)
plot(X,Y)
X <- rnorm(20,10000,.5)
plot(X)
X <- rbinom(20,10000,.5)
density(X)
plot(density(X))
X <- rbinom(20,10000,.5)
density(X)
plot(density(X))
X <- rbinom(20,10000,.5)
density(X)
plot(density(X))
Y <- 3*X^2+X+1
density(Y)
plot(density(Y))
X <- rbinom(20,10000,.5)
density(X)
plot(density(X))
Y <- 3*X^2+X+1
density(Y)
plot(density(Y))
20/10000
2000/10000
X <- rbinom(200,10000,.5)
plot(density(X))
X <- rbinom(2000,10000,.5)
plot(density(X))
X <- rbinom(2000,10000,.5)
plot(density(X))
